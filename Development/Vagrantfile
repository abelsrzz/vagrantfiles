# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "debian/bullseye64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
    config.vm.network "forwarded_port", guest: 80, host: 8080
    config.vm.network "forwarded_port", guest: 4321, host: 4321

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
 #config.vm.network "private_network", ip: "192.168.1.183"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
    config.vm.synced_folder "/media/abelsm/Toshiba/ASIR/segundo/IAW", "/var/www/html/vscode"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
 config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
   vb.gui = false
  #
  #   # Customize the amount of memory on the VM:
   vb.memory = "2048"
   vb.cpus = "2"
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
   config.vm.provision "shell", inline: <<-SHELL
     apt-get update -y
     apt-get upgrade -y

     apt install -y vim

     apt install -y mariadb-server

     mariadb -e "CREATE OR REPLACE USER 'vagrant'@'localhost' IDENTIFIED BY 'abc123.';"
     mariadb -e "GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'localhost';"

     apt-get install apache2 libapache2-mod-php php-cli php-mysql php-zip php-curl php-xml php-mbstring php-zip php-gd unzip -y
    
     wget https://files.phpmyadmin.net/phpMyAdmin/5.1.1/phpMyAdmin-5.1.1-all-languages.zip
     unzip phpMyAdmin-5.1.1-all-languages.zip
     mv phpMyAdmin-5.1.1-all-languages /usr/share/phpmyadmin
     mkdir -p /var/lib/phpmyadmin/tmp
     chown -R www-data:www-data /var/lib/phpmyadmin
     cp /usr/share/phpmyadmin/config.sample.inc.php /usr/share/phpmyadmin/config.inc.php
      cfg='$cfg'
      i='$i'
      echo "$cfg['blowfish_secret'] = 'pau9t1SG6lmaeCFxKqeeaY5N4erIa25K';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['controluser'] = 'pma';" >> /usr/share/phpmyadmin/config.inc.php 
      echo "$cfg['Servers'][$i]['controlpass'] = 'password';" >> /usr/share/phpmyadmin/config.inc.php

      echo "$cfg['Servers'][$i]['pmadb'] = 'phpmyadmin';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['bookmarktable'] = 'pma__bookmark';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['relation'] = 'pma__relation';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['table_info'] = 'pma__table_info';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['table_coords'] = 'pma__table_coords';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['pdf_pages'] = 'pma__pdf_pages';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['column_info'] = 'pma__column_info';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['history'] = 'pma__history';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['table_uiprefs'] = 'pma__table_uiprefs';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['tracking'] = 'pma__tracking';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['userconfig'] = 'pma__userconfig';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['recent'] = 'pma__recent';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['favorite'] = 'pma__favorite';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['users'] = 'pma__users';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['usergroups'] = 'pma__usergroups';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['navigationhiding'] = 'pma__navigationhiding';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['savedsearches'] = 'pma__savedsearches';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['central_columns'] = 'pma__central_columns';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['designer_settings'] = 'pma__designer_settings';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['Servers'][$i]['export_templates'] = 'pma__export_templates';" >> /usr/share/phpmyadmin/config.inc.php
      echo "$cfg['TempDir'] = '/var/lib/phpmyadmin/tmp';" >> /usr/share/phpmyadmin/config.inc.php

      mariadb < /usr/share/phpmyadmin/sql/create_tables.sql
      mariadb -e "GRANT SELECT, INSERT, UPDATE, DELETE ON phpmyadmin.* TO 'pma'@'localhost' IDENTIFIED BY 'abc123.'"
      mariadb -e "CREATE USER myadmin;"
      mariadb -e "GRANT ALL PRIVILEGES ON *.* TO 'myadmin'@'localhost' IDENTIFIED BY 'abc123.' WITH GRANT OPTION;"

      chown -R www-data:www-data /usr/share/phpmyadmin
      chmod -R 755 /usr/share/phpmyadmin/

    
      cp /vagrant/apache /etc/apache2/conf-available/phpmyadmin.conf

    
      a2enconf phpmyadmin.conf

     service apache2 restart
     
     apt install -y docker.io
     
     wget https://nodejs.org/dist/v20.10.0/node-v20.10.0-linux-x64.tar.xz
     tar -xvf node*
     rm -rf node-v20.10.0-linux-x64.tar.xz
     mv node* /bin/nodejs
     
     echo 'PATH=$PATH:/etc/bin/nodejs/bin' >> /etc/bash.bashrc
     source /etc/bash.bashrc
     
     apt install -y code
     apt install -y php-common libapache2-mod-php php-cli
     
     

   SHELL
end

